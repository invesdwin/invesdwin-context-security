<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<bean id="kerberosProperties"
		class="de.invesdwin.context.system.properties.SystemPropertiesDefinition" />

	<security:http entry-point-ref="spnegoEntryPoint"
		use-expressions="true" pattern="_KERBEROS_">

		<security:csrf disabled="true" />
		<security:headers>
			<security:frame-options policy="SAMEORIGIN" />
		</security:headers>

		<!-- <security:intercept-url pattern="/saml/**" access="IS_AUTHENTICATED_FULLY" 
			/> -->

		<security:custom-filter ref="spnegoAuthenticationProcessingFilter"
			before="BASIC_AUTH_FILTER" />
		<!-- need to redirect to form login on failed single sign on -->
		<security:form-login login-page="/signin" />
	</security:http>

	<security:authentication-manager id="kerberosAuthenticationManager">
		<security:authentication-provider
			ref="kerberosAuthenticationProvider" />
		<security:authentication-provider
			ref="kerberosServiceAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="kerberosAuthenticationProvider"
		class="org.springframework.security.kerberos.authentication.KerberosAuthenticationProvider">
		<property name="userDetailsService" ref="kerberosUserDetailsService" />
		<property name="kerberosClient">
			<bean
				class="org.springframework.security.kerberos.authentication.sun.SunJaasKerberosClient">
				<property name="debug"
					value="${de.invesdwin.context.security.kerberos.KerberosProperties.KERBEROS_DEBUG}" />
			</bean>
		</property>
	</bean>

	<!-- need a workaround here since only servlets can answer forwards, thus 
		we let a servlet redirect to the web framework filter at /signin -->
	<bean id="spnegoEntryPoint"
		class="org.springframework.security.kerberos.web.authentication.SpnegoEntryPoint">
		<constructor-arg value="/forwardToSignIn" />
	</bean>

	<bean id="spnegoAuthenticationProcessingFilter"
		class="org.springframework.security.kerberos.web.authentication.SpnegoAuthenticationProcessingFilter">
		<property name="authenticationManager" ref="kerberosAuthenticationManager" />
	</bean>

	<bean id="kerberosServiceAuthenticationProvider"
		class="org.springframework.security.kerberos.authentication.KerberosServiceAuthenticationProvider">
		<property name="ticketValidator">
			<bean
				class="org.springframework.security.kerberos.authentication.sun.SunJaasKerberosTicketValidator">
				<property name="servicePrincipal"
					value="${de.invesdwin.context.security.kerberos.KerberosProperties.KERBEROS_SERVICE_PRINCIPAL}" />
				<property name="keyTabLocation"
					value="#{T(de.invesdwin.context.security.kerberos.KerberosProperties).KERBEROS_KEYTAB_RESOURCE}" />
				<property name="debug"
					value="${de.invesdwin.context.security.kerberos.KerberosProperties.KERBEROS_DEBUG}" />
			</bean>
		</property>
		<property name="userDetailsService" ref="kerberosUserDetailsService" />
	</bean>

	<bean id="kerberosUserDetailsService"
		class="de.invesdwin.context.security.kerberos.internal.RoleAddingKerberosUserDetailsService" />

</beans>